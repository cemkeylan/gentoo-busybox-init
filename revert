#!/usr/bin/env sh

# ########
# Messages
# ########

out() { printf "\033[1m\033[36m->\033[0;00m $1\\n" ;}
error() { printf "\033[1m\033[31m-> ERROR:\033[0;00m $1\\n" ;} >&2
die() { error "$1" ; exit 1 ;}
ask() { printf "\033[1;33m== $1 ==\\n(y/N) " ; read -r ans ; case "$ans" in [Yy]*) return 0 ;; *) return 1 ;; esac ;}

# Let's check that the user has root priviliges
# before starting anything. 
[ "$(id -u)" -eq 0 ] || die "You need root priviliges to run this script"

out "This script will effectively remove the configured busybox-init\\nand replace it with sysvinit."
out "Busybox initscripts that are installed here will not be backed up,\\nbut will not be removed."
ask "Do you want to continue?" || die "User Exited"

remove_busybox() {
	out "Removing busybox related stuff..."
	# Make sure every busybox link is removed
	out "Removing busybox symlinks"
	for program in $(/usr/local/bin/busybox-init --list) ; do
		linklocation="$(which "$program")"
		unlink "$linklocation" || error "Could not unlink $program"
	done
	out "Removing busybox binary from /usr/local/bin"
	rm /usr/local/bin/busybox-init || return 1
	out "Removing busybox inittab"
	[ -e /etc/inittab ] && rm /etc/inittab
}

install_sysvinit() {
	out "Emerging sysvinit from the previously created binary package"
	emerge --usepkgonly sys-apps/sysvinit || return 1
}

remove_busybox || die "Could not remove busybox"
install_sysvinit || die "Could not install sysvinit"
